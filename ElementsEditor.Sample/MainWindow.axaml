<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:sys="clr-namespace:System;assembly=netstandard"
		xmlns:models="clr-namespace:ElementsEditor.Sample.Models;assembly=ElementsEditor.Sample"
		xmlns:viewModels="clr-namespace:ElementsEditor.Sample.ViewModels;assembly=ElementsEditor.Sample"		
		xmlns:editor="clr-namespace:ElementsEditor;assembly=ElementsEditor"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="ElementsEditor.Sample.MainWindow"
		x:DataType="viewModels:MainWindowViewModel"
        Title="ElementsEditor.Sample">	
	<Grid RowDefinitions="* auto">
		<editor:ElementsEditorView DataContext="{Binding ElementsEditorViewModel}">			
			<editor:ElementsEditorView.DataTemplates>
				<DataTemplate DataType="models:FridgeBuilder">
					<StackPanel Orientation="Vertical">
						<TextBox Text="{Binding ProductName}"
								 Watermark="Input product name"/>
						<NumericUpDown Value="{Binding Cost}"
									   Watermark="Input cost"/>
						<NumericUpDown Value="{Binding Temperature}"
									   Watermark="Input temperature"/>						
					</StackPanel>
				</DataTemplate>
				<DataTemplate DataType="models:DeskLampBuilder">
					<StackPanel Orientation="Vertical">
						<TextBox Text="{Binding ProductName}"
								 Watermark="Input product name"/>
						<NumericUpDown Value="{Binding Cost}"
									   Watermark="Input cost"/>
						<NumericUpDown Value="{Binding Lumen}"
									   Watermark="Input lumen"/>
					</StackPanel>
				</DataTemplate>
				<DataTemplate DataType="models:RebarBuilder">
					<StackPanel Orientation="Vertical">
						<TextBox Text="{Binding ProductName}"
								 Watermark="Input rebar name"/>
						<NumericUpDown Value="{Binding Cost}"
									   Watermark="Input cost"/>
						<TextBox Text="{Binding Type}"
								 Watermark="Input type"/>
					</StackPanel>
				</DataTemplate>
				<DataTemplate DataType="{x:Type models:Fridge}">					
					<StackPanel Orientation="Horizontal">
						<PathIcon Classes.IsElementEdited="{Binding State, Converter={StaticResource HasElementModifyStateConverter}}"
								  Classes.IsElementDeleted="{Binding State, Converter={StaticResource HasElementDeleteStateConverter}}"
								  Classes.IsElementAdded="{Binding State, Converter={StaticResource HasElementNewStateConverter}}"
								  Classes="position_middle_horizontal">
						</PathIcon>
						<Label Classes="position_middle_horizontal elements_field_name"
							   Content="Наименование:"/>
						<TextBlock Classes="position_middle_horizontal"
								   Text="Rebar "/>
						<TextBlock Classes="position_middle_horizontal"
								   Text="{Binding Name}"/>
						<Label Classes="position_middle_horizontal elements_field_name"
							   Content="Цена:"/>
						<NumericUpDown Value="{Binding Cost, Mode=TwoWay}"
									   Classes="position_middle_horizontal elements_input_field"/>
						<Label Classes="position_middle_horizontal elements_field_name"
							   Content="Температура:"/>
						<NumericUpDown Value="{Binding Temperature, Mode=TwoWay}"
									   Classes="position_middle_horizontal elements_input_field"/>						
					</StackPanel>
				</DataTemplate>
				<DataTemplate DataType="{x:Type models:DeskLamp}">
					<StackPanel Orientation="Horizontal">
						<PathIcon Classes.IsElementEdited="{Binding State, Converter={StaticResource HasElementModifyStateConverter}}"
								  Classes.IsElementDeleted="{Binding State, Converter={StaticResource HasElementDeleteStateConverter}}"
								  Classes.IsElementAdded="{Binding State, Converter={StaticResource HasElementNewStateConverter}}"
								  Classes="position_middle_horizontal">
						</PathIcon>
						<Label Classes="position_middle_horizontal elements_field_name"
							   Content="Наименование:"/>
						<TextBlock Classes="position_middle_horizontal"
								   Text="Rebar "/>
						<TextBlock Classes="position_middle_horizontal"
								   Text="{Binding Name}"/>
						<Label Classes="position_middle_horizontal elements_field_name"
							   Content="Цена:"/>
						<NumericUpDown Value="{Binding Cost, Mode=TwoWay}"
									   Classes="position_middle_horizontal elements_input_field"/>
						<Label Classes="position_middle_horizontal elements_field_name"
							   Content="Плотность света:"/>
						<NumericUpDown Value="{Binding Lumen, Mode=TwoWay}"
									   Classes="position_middle_horizontal elements_input_field"/>
					</StackPanel>
				</DataTemplate>
				<DataTemplate DataType="{x:Type models:Rebar}">
					<StackPanel Orientation="Horizontal">
						<PathIcon Classes.IsElementEdited="{Binding State, Converter={StaticResource HasElementModifyStateConverter}}"
								  Classes.IsElementDeleted="{Binding State, Converter={StaticResource HasElementDeleteStateConverter}}"
								  Classes.IsElementAdded="{Binding State, Converter={StaticResource HasElementNewStateConverter}}"
								  Classes="position_middle_horizontal">							
						</PathIcon>
						<Label Classes="position_middle_horizontal elements_field_name"
							   Content="Наименование:"/>
						<TextBlock Classes="position_middle_horizontal"
								   Text="Rebar "/>
						<TextBlock Classes="position_middle_horizontal" 
								   Text="{Binding Name}"/>
						<Label Classes="position_middle_horizontal elements_field_name"
							   Content="Цена:"/>
						<NumericUpDown Value="{Binding Cost, Mode=TwoWay}"
									   Classes="position_middle_horizontal elements_input_field"/>
						<Label Content="Тип:"
							   Classes="position_middle_horizontal elements_field_name"/>
						<TextBox Text="{Binding Type, Mode=TwoWay}"
								 Classes="position_middle_horizontal elements_input_field"/>
					</StackPanel>
				</DataTemplate>
			</editor:ElementsEditorView.DataTemplates>
		</editor:ElementsEditorView>		
	</Grid>	
</Window>
